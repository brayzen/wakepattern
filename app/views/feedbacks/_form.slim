= form_for @feedback, html: { class: 'feedback_form' } do |f|
  - if @feedback.errors.any?
    #error_explanation
      ul
        - @feedback.errors.full_messages.each do |message|
          li = message
  .receiver
    - if f.object.receiver&.name.present?
      = f.object.receiver.name
      = f.fields_for :receiver do |r|
        = f.text_field :id, value: f.object.receiver.id, class: 'hidden'
    - else
      / default should be on fields_for
      - f.object.receiver ||= User.new
      = f.fields_for :receiver do |r|
        = r.text_field :handle, placeholder: 'User Handle', class: 'receiver_handle'
        - if current_user.present?
          = r.text_field(:email, placeholder: 'Or Email',
          class: 'receiver_email')


  ul.traits
    - f.object.all_traits
    = f.fields_for :feedback_traits do |trait_form|
      = render 'feedbacks/trait_form', form: trait_form

  = f.text_area :message, class: 'message', placeholder: 'What would you like to say?'

  - if f.object.receiver.persisted?
    - f.object.receiver.questions.each{|q|q.responses.new}
    = f.fields_for :responses do |rf|
      .question
        = rf.hidden_field :question_id
        p = rf.object.question.text
        = rf.text_area :response, class: 'response'

  = f.submit 'Let them know how you feel'

